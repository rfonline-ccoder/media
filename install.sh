#!/bin/bash

# SwagMedia Auto-Install Script
# –°–µ—Ä–≤–µ—Ä: 89.169.1.168
# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: hesus 
# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: swagmedia1
# –î–æ–º–µ–Ω: swagmedia.site

set -e

echo "üöÄ SwagMedia Auto-Installation Script"
echo "======================================"

# –¶–≤–µ—Ç–∞ –¥–ª—è –ª–æ–≥–æ–≤
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

log_step() {
    echo -e "${BLUE}[STEP]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∑–∞–ø—É—â–µ–Ω–æ –æ—Ç root
if [ "$EUID" -ne 0 ]; then 
    log_error "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –æ—Ç root: sudo bash install.sh"
    exit 1
fi

# –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
log_step "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
mkdir -p /root/media/backend
mkdir -p /root/media/frontend
mkdir -p /var/log/swagmedia
mkdir -p /etc/nginx/sites-available
mkdir -p /etc/nginx/sites-enabled

# –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É
log_step "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã..."
apt update && apt upgrade -y

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∞–∑–æ–≤—ã–µ –ø–∞–∫–µ—Ç—ã
log_step "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –ø–∞–∫–µ—Ç—ã..."
apt install -y curl wget git nginx software-properties-common apt-transport-https ca-certificates gnupg lsb-release unzip

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Node.js 18 LTS
log_step "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js 18 LTS..."
curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
apt install -y nodejs

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏–∏ Node.js –∏ npm
node_version=$(node --version)
npm_version=$(npm --version)
log_info "Node.js –≤–µ—Ä—Å–∏—è: $node_version"
log_info "npm –≤–µ—Ä—Å–∏—è: $npm_version"

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Yarn
log_step "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Yarn..."
npm install -g yarn
yarn_version=$(yarn --version)
log_info "Yarn –≤–µ—Ä—Å–∏—è: $yarn_version"

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Python 3.11
log_step "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python 3.11..."
add-apt-repository ppa:deadsnakes/ppa -y
apt update
apt install -y python3.11 python3.11-pip python3.11-venv python3.11-dev python3.11-distutils

# –°–æ–∑–¥–∞–µ–º —Å–∏–º–ª–∏–Ω–∫ –¥–ª—è python3
update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é Python
python3_version=$(python3 --version)
log_info "Python –≤–µ—Ä—Å–∏—è: $python3_version"

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º pip –¥–ª—è Python 3.11
log_step "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ pip..."
curl -sS https://bootstrap.pypa.io/get-pip.py | python3.11

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º PM2
log_step "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ PM2..."
npm install -g pm2

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º MariaDB Server
log_step "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ MariaDB Server..."
apt install -y mariadb-server mariadb-client

# –ó–∞–ø—É—Å–∫–∞–µ–º –∏ –≤–∫–ª—é—á–∞–µ–º MariaDB
systemctl start mariadb
systemctl enable mariadb

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ MariaDB
log_step "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
mysql -u root <<EOF
CREATE DATABASE IF NOT EXISTS swagmedia1 CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
CREATE USER IF NOT EXISTS 'hesus'@'localhost' IDENTIFIED BY 'ba7a7m1ZX3.,';
CREATE USER IF NOT EXISTS 'hesus'@'%' IDENTIFIED BY 'ba7a7m1ZX3.,';
GRANT ALL PRIVILEGES ON swagmedia1.* TO 'hesus'@'localhost';
GRANT ALL PRIVILEGES ON swagmedia1.* TO 'hesus'@'%';
FLUSH PRIVILEGES;
EOF

log_info "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö swagmedia1 —Å–æ–∑–¥–∞–Ω–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"

# –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ /root/media
log_step "–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."

# –ö–æ–ø–∏—Ä—É–µ–º backend —Ñ–∞–π–ª—ã
cp -r /app/backend/* /root/media/backend/
chown -R root:root /root/media/backend

# –ö–æ–ø–∏—Ä—É–µ–º frontend —Ñ–∞–π–ª—ã
cp -r /app/frontend/* /root/media/frontend/
chown -R root:root /root/media/frontend

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ backend
log_step "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ backend (Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏)..."
cd /root/media/backend

# –°–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
python3.11 -m venv venv
source venv/bin/activate

# –û–±–Ω–æ–≤–ª—è–µ–º pip –≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏
pip install --upgrade pip

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
pip install fastapi==0.110.1
pip install uvicorn==0.25.0
pip install sqlalchemy>=2.0.0
pip install pymysql>=1.1.0
pip install alembic>=1.13.0
pip install python-dotenv>=1.0.1
pip install pydantic>=2.6.4
pip install pyjwt>=2.10.1
pip install passlib>=1.7.4
pip install python-multipart>=0.0.9
pip install slowapi>=0.1.9
pip install python-jose>=3.3.0
pip install requests>=2.31.0

log_info "‚úÖ Backend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ frontend
log_step "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ frontend (Node.js –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏)..."
cd /root/media/frontend

# –û–±–Ω–æ–≤–ª—è–µ–º .env —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
cat > .env <<EOF
REACT_APP_BACKEND_URL=https://swagmedia.site
WDS_SOCKET_PORT=443
EOF

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
yarn install

# –°–æ–±–∏—Ä–∞–µ–º production build
yarn build

log_info "‚úÖ Frontend –ø–æ—Å—Ç—Ä–æ–µ–Ω –∏ –≥–æ—Ç–æ–≤"

# –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é PM2
log_step "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ PM2..."
cat > /root/media/ecosystem.config.js <<EOF
module.exports = {
  apps: [
    {
      name: 'swagmedia-backend',
      cwd: '/root/media/backend',
      script: 'venv/bin/python',
      args: '-m uvicorn server:app --host 0.0.0.0 --port 8001 --workers 1',
      env: {
        NODE_ENV: 'production',
        PYTHONPATH: '/root/media/backend'
      },
      instances: 1,
      exec_mode: 'fork',
      autorestart: true,
      watch: false,
      max_memory_restart: '512M',
      error_file: '/var/log/swagmedia/backend-error.log',
      out_file: '/var/log/swagmedia/backend-out.log',
      log_file: '/var/log/swagmedia/backend-combined.log',
      time: true,
      min_uptime: '10s',
      max_restarts: 10
    }
  ]
};
EOF

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx
log_step "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx..."
cat > /etc/nginx/sites-available/swagmedia.site <<EOF
# Nginx configuration for SwagMedia
server {
    listen 80;
    server_name swagmedia.site www.swagmedia.site;
    
    # Redirect HTTP to HTTPS (after SSL setup)
    # return 301 https://\$server_name\$request_uri;
    
    # –í—Ä–µ–º–µ–Ω–Ω–æ —Ä–∞–±–æ—Ç–∞–µ–º –ø–æ HTTP –¥–æ –ø–æ–ª—É—á–µ–Ω–∏—è SSL
    root /root/media/frontend/build;
    index index.html;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Client max body size
    client_max_body_size 50M;

    # API routes - proxy to backend
    location /api {
        proxy_pass http://127.0.0.1:8001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_cache_bypass \$http_upgrade;
        proxy_redirect off;
        
        # Timeouts
        proxy_connect_timeout       60s;
        proxy_send_timeout          60s;
        proxy_read_timeout          60s;
        
        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        
        # Handle preflight requests
        if (\$request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # Frontend routes - serve React app
    location / {
        try_files \$uri \$uri/ /index.html;
        
        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }

    # Security - deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Logs
    access_log /var/log/nginx/swagmedia.access.log;
    error_log /var/log/nginx/swagmedia.error.log;
}
EOF

# –í–∫–ª—é—á–∞–µ–º —Å–∞–π—Ç
ln -sf /etc/nginx/sites-available/swagmedia.site /etc/nginx/sites-enabled/
rm -f /etc/nginx/sites-enabled/default

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Nginx
nginx -t
if [ $? -eq 0 ]; then
    log_info "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Nginx –≤–∞–ª–∏–¥–Ω–∞"
else
    log_error "‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx"
    exit 1
fi

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º Nginx
systemctl restart nginx
systemctl enable nginx

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º UFW Firewall
log_step "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ firewall..."
ufw allow ssh
ufw allow 'Nginx Full'
ufw allow 3306  # MySQL
ufw --force enable

# –ó–∞–ø—É—Å–∫–∞–µ–º backend —á–µ—Ä–µ–∑ PM2
log_step "–ó–∞–ø—É—Å–∫ backend —Å–µ—Ä–≤–∏—Å–∞..."
cd /root/media
pm2 start ecosystem.config.js

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ PM2
pm2 startup
pm2 save

log_info "‚úÖ PM2 –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞"

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Certbot –¥–ª—è SSL (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
log_step "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Certbot –¥–ª—è SSL..."
apt install -y certbot python3-certbot-nginx

# –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
cat > /root/get-ssl.sh <<'EOF'
#!/bin/bash
echo "–ü–æ–ª—É—á–µ–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –¥–ª—è swagmedia.site..."
certbot --nginx -d swagmedia.site -d www.swagmedia.site --non-interactive --agree-tos --email admin@swagmedia.site

# –ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞, –æ–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é nginx –¥–ª—è —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞ –Ω–∞ HTTPS
if [ $? -eq 0 ]; then
    echo "‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ"
    echo "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º nginx..."
    systemctl reload nginx
else
    echo "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞"
fi
EOF

chmod +x /root/get-ssl.sh

# –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
cat > /root/check-status.sh <<'EOF'
#!/bin/bash
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ SwagMedia..."
echo "================================"

echo "1. –°—Ç–∞—Ç—É—Å PM2 –ø—Ä–æ—Ü–µ—Å—Å–æ–≤:"
pm2 status

echo -e "\n2. –°—Ç–∞—Ç—É—Å Nginx:"
systemctl status nginx --no-pager -l

echo -e "\n3. –°—Ç–∞—Ç—É—Å MariaDB:"
systemctl status mariadb --no-pager -l

echo -e "\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:"
mysql -u hesus -pba7a7m1ZX3., -e "SHOW DATABASES;" | grep swagmedia1

echo -e "\n5. –ü—Ä–æ–≤–µ—Ä–∫–∞ backend API:"
curl -s http://localhost:8001/api/health | head -c 200

echo -e "\n\n6. –õ–æ–≥–∏ backend (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫):"
tail -n 10 /var/log/swagmedia/backend-combined.log

echo -e "\n7. –õ–æ–≥–∏ Nginx (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å—Ç—Ä–æ–∫):"
tail -n 5 /var/log/nginx/swagmedia.error.log
EOF

chmod +x /root/check-status.sh

# –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
cat > /root/restart-services.sh <<'EOF'
#!/bin/bash
echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ SwagMedia..."

echo "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ PM2 –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."
pm2 restart all

echo "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Nginx..."
systemctl restart nginx

echo "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ MariaDB..."
systemctl restart mariadb

echo "‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã"
pm2 status
EOF

chmod +x /root/restart-services.sh

# –°–æ–∑–¥–∞–µ–º cron –∑–∞–¥–∞—á—É –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è SSL
log_step "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è SSL..."
(crontab -l 2>/dev/null; echo "0 12 * * * /usr/bin/certbot renew --quiet") | crontab -

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
log_step "–§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã
sleep 5

# –ü—Ä–æ–≤–µ—Ä—è–µ–º PM2
pm2_status=$(pm2 list | grep swagmedia-backend | grep online)
if [ -n "$pm2_status" ]; then
    log_info "‚úÖ Backend –∑–∞–ø—É—â–µ–Ω —á–µ—Ä–µ–∑ PM2"
else
    log_error "‚ùå Backend –Ω–µ –∑–∞–ø—É—â–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Nginx
if systemctl is-active --quiet nginx; then
    log_info "‚úÖ Nginx –∞–∫—Ç–∏–≤–µ–Ω"
else
    log_error "‚ùå Nginx –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º MariaDB
if systemctl is-active --quiet mariadb; then
    log_info "‚úÖ MariaDB –∞–∫—Ç–∏–≤–µ–Ω"
else
    log_error "‚ùå MariaDB –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º API endpoint
api_check=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8001/api/health)
if [ "$api_check" = "200" ]; then
    log_info "‚úÖ Backend API –æ—Ç–≤–µ—á–∞–µ—Ç"
else
    log_warn "‚ö†Ô∏è Backend API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç (–∫–æ–¥: $api_check)"
fi

echo ""
echo "üéâ –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!"
echo "======================"
echo ""
echo "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ:"
echo "   –î–æ–º–µ–Ω: http://swagmedia.site (–∏–ª–∏ http://89.169.1.168)"
echo "   Backend API: http://89.169.1.168:8001/api/health"
echo "   –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: swagmedia1"
echo "   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ë–î: hesus"
echo ""
echo "üîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "   –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å:     ./check-status.sh"
echo "   –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ:    ./restart-services.sh"
echo "   –ü–æ–ª—É—á–∏—Ç—å SSL:         ./get-ssl.sh"
echo "   PM2 –ø—Ä–æ—Ü–µ—Å—Å—ã:         pm2 status"
echo "   –õ–æ–≥–∏ backend:         pm2 logs swagmedia-backend"
echo ""
echo "üîë –ê–¥–º–∏–Ω –¥–æ—Å—Ç—É–ø:"
echo "   –õ–æ–≥–∏–Ω: admin"
echo "   –ü–∞—Ä–æ–ª—å: admin123"
echo ""
echo "‚ö†Ô∏è –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:"
echo "1. –ù–∞–ø—Ä–∞–≤—å—Ç–µ –¥–æ–º–µ–Ω swagmedia.site –Ω–∞ IP 89.169.1.168"
echo "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ ./get-ssl.sh –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞"
echo "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É —Å–∞–π—Ç–∞: http://swagmedia.site"
echo ""

# –ü—Ä–æ–≤–æ–¥–∏–º –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
log_step "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
cd /root/media/backend
source venv/bin/activate
python3 -c "
from server import init_database
init_database()
print('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!')
"

log_info "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ SwagMedia –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"