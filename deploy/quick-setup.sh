#!/bin/bash

# SwagMedia Quick Setup Script
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ –¥–µ–ø–ª–æ—è SwagMedia
# 
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
# 1. –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –≤–µ—Å—å –ø—Ä–æ–µ–∫—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä: scp -r /app/* root@89.169.1.168:/tmp/swagmedia/
# 2. –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É: ssh root@89.169.1.168
# 3. –ó–∞–ø—É—Å—Ç–∏—Ç—å: cd /tmp/swagmedia && chmod +x deploy/quick-setup.sh && ./deploy/quick-setup.sh

set -e

echo "üöÄ SwagMedia Quick Setup –¥–ª—è 89.169.1.168"
echo "Domain: swagmedia.site"
echo "Database: swagmedia1"
echo ""

# –¶–≤–µ—Ç–∞ –¥–ª—è –ª–æ–≥–æ–≤
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
    exit 1
}

log_step() {
    echo -e "${BLUE}[STEP]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∏
if [ "$EUID" -ne 0 ]; then 
    log_error "–ó–∞–ø—É—Å—Ç–∏—Ç–µ –æ—Ç root: sudo ./deploy/quick-setup.sh"
fi

if [ ! -f "backend/server.py" ]; then
    log_error "–§–∞–π–ª—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –ø—Ä–æ–µ–∫—Ç–æ–º."
fi

log_step "1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤..."

# –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É
apt update -y
apt upgrade -y

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã
apt install -y curl wget git nginx software-properties-common apt-transport-https ca-certificates gnupg lsb-release python3-pip

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Node.js 18
curl -fsSL https://deb.nodesource.com/setup_18.x | bash -
apt install -y nodejs

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Yarn
npm install -g yarn pm2

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Python –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
apt install -y python3-venv python3-dev

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º MySQL
log_info "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º MySQL Server..."
export DEBIAN_FRONTEND=noninteractive
apt install -y mysql-server

# –ó–∞–ø—É—Å–∫–∞–µ–º MySQL
systemctl start mysql
systemctl enable mysql

log_step "2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ MySQL..."

# –°–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
mysql -u root <<EOF
CREATE DATABASE IF NOT EXISTS swagmedia1 CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
CREATE USER IF NOT EXISTS 'hesus'@'localhost' IDENTIFIED BY 'ba7a7m1ZX3.';
CREATE USER IF NOT EXISTS 'hesus'@'%' IDENTIFIED BY 'ba7a7m1ZX3.';
GRANT ALL PRIVILEGES ON swagmedia1.* TO 'hesus'@'localhost';
GRANT ALL PRIVILEGES ON swagmedia1.* TO 'hesus'@'%';
FLUSH PRIVILEGES;
EOF

log_info "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö swagmedia1 —Å–æ–∑–¥–∞–Ω–∞"

log_step "3. –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."

# –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
useradd -r -m -d /var/www/swagmedia -s /bin/bash swagmedia || true
mkdir -p /var/www/swagmedia/{backend,frontend}
mkdir -p /var/log/pm2

log_step "4. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Backend..."

# –ö–æ–ø–∏—Ä—É–µ–º backend —Ñ–∞–π–ª—ã
cp -r backend/* /var/www/swagmedia/backend/
cp -r *.py /var/www/swagmedia/backend/ 2>/dev/null || true

# –ö–æ–ø–∏—Ä—É–µ–º production –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
cp deploy/production.env /var/www/swagmedia/backend/.env

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
cd /var/www/swagmedia/backend
python3 -m venv venv
source venv/bin/activate
pip install --upgrade pip

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
pip install fastapi==0.110.1 uvicorn==0.25.0 sqlalchemy>=2.0.0 pymysql>=1.1.0 python-dotenv>=1.0.1 pydantic>=2.6.4 pyjwt>=2.10.1 passlib>=1.7.4 slowapi>=0.1.9 python-multipart>=0.0.9 python-jose>=3.3.0

# –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
log_info "–°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö..."
python3 -c "
import sys
sys.path.append('/var/www/swagmedia/backend')
try:
    from models import create_tables
    create_tables()
    print('–¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ')
except Exception as e:
    print(f'–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü: {e}')
"

log_step "5. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Frontend..."

# –ö–æ–ø–∏—Ä—É–µ–º frontend —Ñ–∞–π–ª—ã
cd /tmp/swagmedia
cp -r frontend/* /var/www/swagmedia/frontend/ 2>/dev/null || true

# –ö–æ–ø–∏—Ä—É–µ–º production –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
cp deploy/frontend-production.env /var/www/swagmedia/frontend/.env

cd /var/www/swagmedia/frontend

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏ —Å–æ–±–∏—Ä–∞–µ–º
if [ -f "package.json" ]; then
    yarn install
    yarn build
    log_info "Frontend —Å–æ–±—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ"
else
    log_warn "package.json –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π build"
    mkdir -p build
    echo '<h1>SwagMedia</h1><p>Backend ready at <a href="/api">/api</a></p>' > build/index.html
fi

log_step "6. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ PM2..."

# –ö–æ–ø–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é PM2
cp /tmp/swagmedia/deploy/ecosystem.config.js /var/www/swagmedia/

# –ú–µ–Ω—è–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–∞
chown -R swagmedia:swagmedia /var/www/swagmedia
chown -R swagmedia:swagmedia /var/log/pm2

# –ó–∞–ø—É—Å–∫–∞–µ–º PM2
cd /var/www/swagmedia
su - swagmedia -c "cd /var/www/swagmedia && pm2 start ecosystem.config.js"
su - swagmedia -c "pm2 save"

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ PM2
env PATH=$PATH:/usr/bin pm2 startup systemd -u swagmedia --hp /var/www/swagmedia

log_step "7. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx..."

# –ö–æ–ø–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
cp /tmp/swagmedia/deploy/nginx.conf /etc/nginx/sites-available/swagmedia.site

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —Å–∞–π—Ç
ln -sf /etc/nginx/sites-available/swagmedia.site /etc/nginx/sites-enabled/
rm -f /etc/nginx/sites-enabled/default

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
nginx -t
systemctl restart nginx
systemctl enable nginx

log_step "8. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞..."

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Certbot
apt install -y certbot python3-certbot-nginx

# –°–æ–∑–¥–∞–µ–º DH –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048

log_info "–ü–æ–ª—É—á–∞–µ–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç..."
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ª—É—á–∞–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
certbot --nginx -d swagmedia.site -d www.swagmedia.site --non-interactive --agree-tos --email admin@swagmedia.site --redirect

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
echo "0 12 * * * /usr/bin/certbot renew --quiet" | crontab -

log_step "9. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Firewall..."

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º UFW
apt install -y ufw

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª–∞
ufw --force enable
ufw allow ssh
ufw allow 'Nginx Full'
ufw allow 3306
ufw reload

log_step "10. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞..."

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Å–ª—É–∂–±—ã
systemctl restart nginx
su - swagmedia -c "pm2 restart all"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
log_info "–°—Ç–∞—Ç—É—Å —Å–ª—É–∂–±:"
systemctl is-active nginx && echo "‚úÖ Nginx: OK" || echo "‚ùå Nginx: ERROR"
systemctl is-active mysql && echo "‚úÖ MySQL: OK" || echo "‚ùå MySQL: ERROR"
su - swagmedia -c "pm2 list" | grep -q swagmedia-backend && echo "‚úÖ Backend: OK" || echo "‚ùå Backend: ERROR"

# –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
cd /
rm -rf /tmp/swagmedia

echo ""
echo "üéâ SwagMedia —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
echo ""
echo "üåê –°–∞–π—Ç: https://swagmedia.site"
echo "üîß Backend API: https://swagmedia.site/api"
echo ""
echo "üìä –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:"
echo "   PM2: su - swagmedia -c 'pm2 status'"
echo "   Nginx: systemctl status nginx"
echo "   MySQL: systemctl status mysql"
echo ""
echo "üìù –õ–æ–≥–∏:"
echo "   Backend: /var/log/pm2/swagmedia-backend-*.log"
echo "   Nginx: /var/log/nginx/swagmedia.*.log"
echo ""
echo "‚öôÔ∏è  –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å: https://swagmedia.site"
echo "   –õ–æ–≥–∏–Ω: admin"
echo "   –ü–∞—Ä–æ–ª—å: admin123"
echo ""
echo "‚úÖ –í—Å–µ –≥–æ—Ç–æ–≤–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!"