#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ SwagMedia (–ª–æ–∫–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è)
"""

import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º backend –≤ –ø—É—Ç—å
sys.path.append(str(Path(__file__).parent / "backend"))

from dotenv import load_dotenv
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
import uuid
from datetime import datetime
from getpass import getpass

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv(Path(__file__).parent / "backend" / ".env")

def get_database_url():
    """–ü–æ–ª—É—á–∏—Ç—å URL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    db_url = os.getenv("MYSQL_URL")
    
    if not db_url:
        print("‚ùå MYSQL_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ!")
        print("\n–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î:")
        
        host = input("–•–æ—Å—Ç –ë–î (localhost): ").strip() or "localhost"
        port = input("–ü–æ—Ä—Ç –ë–î (3306): ").strip() or "3306"
        username = input("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ë–î: ").strip()
        
        if not username:
            print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ë–î –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω!")
            return None
            
        password = getpass("–ü–∞—Ä–æ–ª—å –ë–î: ").strip()
        database = input("–ò–º—è –ë–î: ").strip()
        
        if not database:
            print("‚ùå –ò–º—è –ë–î –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ!")
            return None
            
        db_url = f"mysql+pymysql://{username}:{password}@{host}:{port}/{database}"
    
    return db_url

def test_connection(db_url):
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î"""
    try:
        engine = create_engine(db_url, echo=False)
        connection = engine.connect()
        connection.close()
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")
        return False

def create_admin():
    """–°–æ–∑–¥–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    print("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ SwagMedia")
    print("=" * 40)
    
    # –ü–æ–ª—É—á–∞–µ–º URL –ë–î
    db_url = get_database_url()
    if not db_url:
        return False
        
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î...")
    if not test_connection(db_url):
        return False
    print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å–ø–µ—à–Ω–æ!")
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
    try:
        engine = create_engine(db_url, echo=False)
        SessionLocal = sessionmaker(bind=engine)
        db = SessionLocal()
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª–∏ –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        from server import User, Application
        
        print("\nüë§ –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:")
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        nickname = input("–ù–∏–∫–Ω–µ–π–º –∞–¥–º–∏–Ω–∞ (admin): ").strip() or "admin"
        login = input("–õ–æ–≥–∏–Ω –∞–¥–º–∏–Ω–∞ (admin): ").strip() or "admin"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å
        existing_user = db.query(User).filter(
            (User.login == login) | (User.nickname == nickname)
        ).first()
        
        if existing_user:
            print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –ª–æ–≥–∏–Ω–æ–º '{login}' –∏–ª–∏ –Ω–∏–∫–Ω–µ–π–º–æ–º '{nickname}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
            return False
        
        password = getpass("–ü–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∞: ").strip()
        if not password:
            print("‚ùå –ü–∞—Ä–æ–ª—å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!")
            return False
            
        vk_link = input("VK —Å—Å—ã–ª–∫–∞ (https://vk.com/admin): ").strip() or "https://vk.com/admin"
        channel_link = input("–°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª (https://t.me/admin): ").strip() or "https://t.me/admin"
        
        # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        from passlib.context import CryptContext
        pwd_context = CryptContext(schemes=["bcrypt"], deprecated="auto")
        hashed_password = pwd_context.hash(password)
        
        admin_user = User(
            id=str(uuid.uuid4()),
            login=login,
            password=hashed_password,
            nickname=nickname,
            vk_link=vk_link,
            channel_link=channel_link,
            balance=10000,  # –ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å
            admin_level=1,  # –ê–¥–º–∏–Ω —É—Ä–æ–≤–µ–Ω—å
            is_approved=True,  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–¥–æ–±—Ä–µ–Ω
            media_type=1,  # –ü–ª–∞—Ç–Ω—ã–π —Ç–∏–ø –º–µ–¥–∏–∞
            warnings=0,
            previews_used=0,
            previews_limit=3,
            blacklist_until=None,
            registration_ip="127.0.0.1",
            created_at=datetime.utcnow()
        )
        
        db.add(admin_user)
        db.commit()
        
        print(f"\n‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        print(f"üë§ –ù–∏–∫–Ω–µ–π–º: {nickname}")
        print(f"üîë –õ–æ–≥–∏–Ω: {login}")
        print(f"üí∞ –ë–∞–ª–∞–Ω—Å: 10,000 MC")
        print(f"üèÜ –ê–¥–º–∏–Ω —É—Ä–æ–≤–µ–Ω—å: 1")
        print(f"üíé –¢–∏–ø –º–µ–¥–∏–∞: –ü–ª–∞—Ç–Ω—ã–π")
        
        return True
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥–µ–ª–µ–π: {e}")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –≤—ã –∑–∞–ø—É—Å–∫–∞–µ—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {e}")
        return False
    finally:
        if 'db' in locals():
            db.close()

def check_admin_exists():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤"""
    db_url = get_database_url()
    if not db_url or not test_connection(db_url):
        return False
        
    try:
        engine = create_engine(db_url, echo=False)
        SessionLocal = sessionmaker(bind=engine)
        db = SessionLocal()
        
        from server import User
        
        # –ò—â–µ–º –∞–¥–º–∏–Ω–æ–≤
        admins = db.query(User).filter(User.admin_level > 0).all()
        
        if admins:
            print(f"\nüëë –ù–∞–π–¥–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: {len(admins)}")
            for admin in admins:
                print(f"   - {admin.nickname} ({admin.login}) - –£—Ä–æ–≤–µ–Ω—å: {admin.admin_level}")
        else:
            print("\n‚ö†Ô∏è  –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
        return len(admins) > 0
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: {e}")
        return False
    finally:
        if 'db' in locals():
            db.close()

if __name__ == "__main__":
    print("üéØ SwagMedia Admin Creator")
    print("=" * 30)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∞–¥–º–∏–Ω–æ–≤
    has_admins = check_admin_exists()
    
    if has_admins:
        response = input("\n–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç. –°–æ–∑–¥–∞—Ç—å –µ—â–µ –æ–¥–Ω–æ–≥–æ? (y/N): ").strip().lower()
        if response not in ['y', 'yes', '–¥–∞', '–¥']:
            print("üëã –û—Ç–º–µ–Ω–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
            sys.exit(0)
    
    # –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∞
    success = create_admin()
    
    if success:
        print("\nüéâ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
        print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: ./start-all.sh")
        print("2. üåê –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:3000")
        print("3. üîë –í–æ–π–¥–∏—Ç–µ —Å —Å–æ–∑–¥–∞–Ω–Ω—ã–º–∏ —É—á–µ—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏")
    else:
        print("\n‚ùå –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–µ —É–¥–∞–ª–æ—Å—å")
        sys.exit(1)