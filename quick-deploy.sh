#!/bin/bash

# SwagMedia Quick Deploy - –ë—ã—Å—Ç—Ä–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: sudo ./quick-deploy.sh

set -e

echo "üöÄ SwagMedia Quick Deploy –¥–ª—è Ubuntu 22"
echo "======================================"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ root
if [[ $EUID -ne 0 ]]; then
   echo "‚ùå –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å sudo: sudo ./quick-deploy.sh"
   exit 1
fi

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
DOMAIN="swagmedia.site"
PROJECT_DIR="/root/media"

echo "üìã –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤: $PROJECT_DIR"
echo "üåê –î–æ–º–µ–Ω: $DOMAIN"
echo ""
read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " -n 1 -r
echo ""
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞"
    exit 1
fi

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
echo "üì¶ –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É..."
apt update > /dev/null 2>&1

# –ë–∞–∑–æ–≤—ã–µ –ø–∞–∫–µ—Ç—ã
echo "üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∞–∑–æ–≤—ã–µ –ø–∞–∫–µ—Ç—ã..."
apt install -y curl git build-essential > /dev/null 2>&1

# Node.js
echo "üì± –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Node.js..."
curl -fsSL https://deb.nodesource.com/setup_20.x | bash - > /dev/null 2>&1
apt install -y nodejs > /dev/null 2>&1
npm install -g yarn pm2 serve > /dev/null 2>&1

# Python
echo "üêç –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Python..."
apt install -y python3.11 python3.11-venv python3-pip > /dev/null 2>&1

# Nginx
echo "üåê –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Nginx..."
apt install -y nginx > /dev/null 2>&1

# MySQL
echo "üóÑÔ∏è –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º MySQL..."
apt install -y mariadb-server > /dev/null 2>&1

# SSL
echo "üîê –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Certbot..."
apt install -y certbot python3-certbot-nginx > /dev/null 2>&1

# Firewall
echo "üõ°Ô∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º firewall..."
ufw --force enable > /dev/null 2>&1
ufw allow ssh > /dev/null 2>&1
ufw allow 80/tcp > /dev/null 2>&1
ufw allow 443/tcp > /dev/null 2>&1

# –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
echo "üìÅ –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞..."
mkdir -p $PROJECT_DIR
cd $PROJECT_DIR

# –ü–æ–∏—Å–∫ –∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
echo "üìã –ò—â–µ–º —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞..."

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –ø–∞–ø–æ–∫ –ø—Ä–æ–µ–∫—Ç–∞
find_project() {
    local dirs=(
        "$(pwd)"
        "$(dirname "$(readlink -f "$0")" 2>/dev/null || dirname "$0")"
        "/root/media" 
        "/root"
        "$(dirname "$(pwd)")"
    )
    
    for dir in "${dirs[@]}"; do
        if [ -d "$dir/backend" ] && [ -d "$dir/frontend" ]; then
            echo "$dir"
            return 0
        fi
    done
    return 1
}

SOURCE=$(find_project)

if [ -n "$SOURCE" ]; then
    echo "‚úÖ –ù–∞–π–¥–µ–Ω—ã —Ñ–∞–π–ª—ã –≤: $SOURCE"
    if [ "$SOURCE" != "$PROJECT_DIR" ]; then
        echo "üìÇ –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã..."
        cp -r "$SOURCE/backend" "$SOURCE/frontend" "$PROJECT_DIR/"
        echo "‚úÖ –§–∞–π–ª—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã"
    else
        echo "‚úÖ –§–∞–π–ª—ã —É–∂–µ –≤ –Ω—É–∂–Ω–æ–º –º–µ—Å—Ç–µ"
    fi
else
    echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–∞–ø–∫–∏ backend/ –∏ frontend/"
    echo ""
    echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ–∞–π–ª–æ–≤:"
    echo "$(pwd)/backend/  - $([ -d "$(pwd)/backend" ] && echo "‚úÖ –µ—Å—Ç—å" || echo "‚ùå –Ω–µ—Ç")"
    echo "$(pwd)/frontend/ - $([ -d "$(pwd)/frontend" ] && echo "‚úÖ –µ—Å—Ç—å" || echo "‚ùå –Ω–µ—Ç")"
    echo ""
    
    read -p "–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –ø—Ä–æ–µ–∫—Ç–æ–º (–∏–ª–∏ Enter –¥–ª—è –æ—Ç–º–µ–Ω—ã): " custom_path
    
    if [ -n "$custom_path" ] && [ -d "$custom_path/backend" ] && [ -d "$custom_path/frontend" ]; then
        echo "‚úÖ –ù–∞–π–¥–µ–Ω—ã —Ñ–∞–π–ª—ã –≤: $custom_path"
        cp -r "$custom_path/backend" "$custom_path/frontend" "$PROJECT_DIR/"
        echo "‚úÖ –§–∞–π–ª—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã"
    else
        echo "‚ùå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞"
        exit 1
    fi
fi

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
echo "üóÑÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö..."
mysql -e "CREATE DATABASE IF NOT EXISTS swagmedia_prod;"
mysql -e "CREATE USER IF NOT EXISTS 'swagmedia'@'localhost' IDENTIFIED BY 'SwagMedia2024!';"
mysql -e "GRANT ALL PRIVILEGES ON swagmedia_prod.* TO 'swagmedia'@'localhost';"
mysql -e "FLUSH PRIVILEGES;" > /dev/null 2>&1

# Backend .env
echo "‚öôÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º backend..."
cat > $PROJECT_DIR/backend/.env << EOF
MYSQL_URL="mysql+pymysql://swagmedia:SwagMedia2024!@localhost:3306/swagmedia_prod"
CORS_ORIGINS="https://$DOMAIN,http://localhost:3000"
EOF

# Frontend .env
echo "‚öôÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º frontend..."
cat > $PROJECT_DIR/frontend/.env << EOF
REACT_APP_BACKEND_URL=https://$DOMAIN
GENERATE_SOURCEMAP=false
EOF

# Backend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "üêç –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º backend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
cd $PROJECT_DIR/backend
python3 -m venv venv > /dev/null 2>&1
source venv/bin/activate
pip install --upgrade pip > /dev/null 2>&1
pip install -r requirements.txt > /dev/null 2>&1

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î –∏ –∞–¥–º–∏–Ω
python3 << EOF
import sys
import os
sys.path.append('.')
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
from models import User, Base
from passlib.context import CryptContext
from datetime import datetime

engine = create_engine("mysql+pymysql://swagmedia:SwagMedia2024!@localhost:3306/swagmedia_prod")
Base.metadata.create_all(bind=engine)
SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)
db = SessionLocal()
pwd_context = CryptContext(schemes=["bcrypt"], deprecated="auto")

admin = db.query(User).filter(User.login == "admin").first()
if not admin:
    admin_user = User(
        user_id="admin-12345",
        login="admin",
        nickname="Admin",
        password=pwd_context.hash("admin123"),
        vk_link="https://vk.com/admin",
        channel_links=["https://t.me/swagmedia"],
        is_admin=True,
        is_approved=True,
        media_type=1,
        balance=10000,
        previews_used=0,
        previews_limit=3,
        warnings=0,
        registration_ip="127.0.0.1",
        created_at=datetime.utcnow()
    )
    db.add(admin_user)
    db.commit()
print("‚úÖ Admin —Å–æ–∑–¥–∞–Ω: admin/admin123")
db.close()
EOF

# Frontend —Å–±–æ—Ä–∫–∞
echo "üì± –°–æ–±–∏—Ä–∞–µ–º frontend..."
cd $PROJECT_DIR/frontend
yarn install > /dev/null 2>&1
yarn build > /dev/null 2>&1

# PM2 –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
echo "‚ö° –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º PM2..."
cat > $PROJECT_DIR/ecosystem.config.js << EOF
module.exports = {
  apps: [
    {
      name: 'swagmedia-backend',
      script: 'venv/bin/python',
      args: '-m uvicorn server:app --host 0.0.0.0 --port 8001',
      cwd: '$PROJECT_DIR/backend',
      instances: 1,
      autorestart: true,
      max_memory_restart: '1G'
    },
    {
      name: 'swagmedia-frontend',
      script: 'npx',
      args: 'serve -s build -l 3000',
      cwd: '$PROJECT_DIR/frontend',
      instances: 1,
      autorestart: true,
      max_memory_restart: '512M'
    }
  ]
};
EOF

# Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
echo "üåê –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Nginx..."
cat > /etc/nginx/sites-available/$DOMAIN << EOF
server {
    listen 80;
    server_name $DOMAIN www.$DOMAIN;
    
    location / {
        proxy_pass http://localhost:3000;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
    
    location /api/ {
        proxy_pass http://localhost:8001/api/;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
}
EOF

ln -sf /etc/nginx/sites-available/$DOMAIN /etc/nginx/sites-enabled/
rm -f /etc/nginx/sites-enabled/default
nginx -t && systemctl restart nginx

# –ó–∞–ø—É—Å–∫ PM2
echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã..."
cd $PROJECT_DIR
pm2 delete all 2>/dev/null || true
pm2 start ecosystem.config.js > /dev/null 2>&1
pm2 startup systemd -u root --hp /root > /dev/null 2>&1
pm2 save > /dev/null 2>&1

# –ü—Ä–æ–≤–µ—Ä–∫–∞
sleep 5
echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å..."
if pm2 list | grep -q "online.*swagmedia"; then
    echo "‚úÖ PM2 –ø—Ä–æ—Ü–µ—Å—Å—ã –∑–∞–ø—É—â–µ–Ω—ã"
else
    echo "‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã —Å PM2, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ: pm2 status"
fi

if systemctl is-active --quiet nginx; then
    echo "‚úÖ Nginx —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã —Å Nginx"
fi

# SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
echo ""
echo "üîê –ü–æ–ª—É—á–∞–µ–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç..."
echo "–í–ê–ñ–ù–û: –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ $DOMAIN —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ IP —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞!"
read -p "–î–æ–º–µ–Ω –Ω–∞—Å—Ç—Ä–æ–µ–Ω? –ü–æ–ª—É—á–∏—Ç—å SSL? (y/N): " -n 1 -r
echo ""
if [[ $REPLY =~ ^[Yy]$ ]]; then
    certbot --nginx -d $DOMAIN -d www.$DOMAIN --non-interactive --agree-tos --email admin@$DOMAIN || echo "‚ö†Ô∏è SSL –Ω–µ –ø–æ–ª—É—á–µ–Ω, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ DNS"
fi

# –§–∏–Ω–∞–ª
echo ""
echo "üéâ –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!"
echo "======================="
echo ""
echo "üåê –°–∞–π—Ç: https://$DOMAIN (–∏–ª–∏ http://$DOMAIN –µ—Å–ª–∏ SSL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω)"
echo "üë§ –ê–¥–º–∏–Ω: admin / admin123"
echo ""
echo "üìä –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
echo "  pm2 status     - —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤"
echo "  pm2 logs       - –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π"
echo "  pm2 restart all - –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫"
echo ""
echo "üîß Nginx:"
echo "  systemctl status nginx"
echo "  systemctl restart nginx"
echo ""
echo "‚úÖ SwagMedia –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!"