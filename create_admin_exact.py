#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è admin —Å —Ç–æ—á–Ω–æ —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
"""

import sys
import os
import uuid
from datetime import datetime
from sqlalchemy import create_engine, Column, String, Integer, Boolean, DateTime, Text, ForeignKey
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker
from passlib.context import CryptContext

# Database connection
DATABASE_URL = "mysql+pymysql://hesus:ba7a7m1ZX3.,@89.169.1.168:3306/swagmedia1?charset=utf8mb4"

Base = declarative_base()
pwd_context = CryptContext(schemes=["bcrypt"], deprecated="auto")

class User(Base):
    __tablename__ = "users"
    
    id = Column(String(36), primary_key=True, default=lambda: str(uuid.uuid4()))
    login = Column(String(100), unique=True, nullable=False, index=True)
    password = Column(String(255), nullable=False)
    nickname = Column(String(100), unique=True, nullable=False, index=True)
    vk_link = Column(String(255), nullable=False)
    channel_link = Column(String(255), nullable=False)
    balance = Column(Integer, default=0)
    admin_level = Column(Integer, default=0)
    is_approved = Column(Boolean, default=False)
    media_type = Column(Integer, default=0)
    warnings = Column(Integer, default=0)
    previews_used = Column(Integer, default=0)
    previews_limit = Column(Integer, default=3)
    blacklist_until = Column(DateTime, nullable=True)
    registration_ip = Column(String(45), nullable=True)
    created_at = Column(DateTime, default=datetime.utcnow)

def hash_password(password: str) -> str:
    """–•–µ—à–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä–æ–ª—å"""
    return pwd_context.hash(password)

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è admin...")
    
    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        engine = create_engine(
            DATABASE_URL,
            echo=False,
            pool_pre_ping=True,
            pool_recycle=3600,
            connect_args={"charset": "utf8mb4"}
        )
        
        SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)
        db = SessionLocal()
        
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        
        # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å admin
        existing_admin = db.query(User).filter(User.login == "admin").first()
        
        if existing_admin:
            print(f"‚ùó –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å admin —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:")
            print(f"   ID: {existing_admin.id}")
            print(f"   Login: {existing_admin.login}")
            print(f"   Nickname: {existing_admin.nickname}")
            print(f"   Admin Level: {existing_admin.admin_level}")
            print(f"   Is Approved: {existing_admin.is_approved}")
            print("\nüîÑ –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∞–¥–º–∏–Ω–∞ –Ω–∞ ba7a7am1ZX3...")
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å
            existing_admin.password = hash_password("ba7a7am1ZX3")
            db.commit()
            
            print("‚úÖ –ü–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ ba7a7am1ZX3")
            
        else:
            print("üìã –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è admin...")
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞ —Å —Ç–æ—á–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
            admin_user = User(
                id=str(uuid.uuid4()),
                login="admin",
                password=hash_password("ba7a7am1ZX3"),
                nickname="admin",  # –∏–ª–∏ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥–æ–π nickname –µ—Å–ª–∏ admin –∑–∞–Ω—è—Ç
                vk_link="https://vk.com/swagmedia_admin",
                channel_link="https://t.me/swagmedia_official",
                balance=100000,  # –ë–æ–ª—å—à–æ–π –±–∞–ª–∞–Ω—Å –¥–ª—è –∞–¥–º–∏–Ω–∞
                admin_level=1,   # –ê–¥–º–∏–Ω—Å–∫–∏–µ –ø—Ä–∞–≤–∞
                is_approved=True,
                media_type=1,    # –ü–ª–∞—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø
                warnings=0,
                previews_used=0,
                previews_limit=999,  # –ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä—ã
                registration_ip="127.0.0.1",
                created_at=datetime.utcnow()
            )
            
            db.add(admin_user)
            db.commit()
            print(f"‚úÖ –ê–¥–º–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: login=admin, password=ba7a7am1ZX3")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        updated_admin = db.query(User).filter(User.login == "admin").first()
        print(f"\nüìä –ò—Ç–æ–≥–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–¥–º–∏–Ω–µ:")
        print(f"   Login: {updated_admin.login}")
        print(f"   Nickname: {updated_admin.nickname}")
        print(f"   Admin Level: {updated_admin.admin_level}")
        print(f"   Balance: {updated_admin.balance}")
        print(f"   Is Approved: {updated_admin.is_approved}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ—Ö –∞–¥–º–∏–Ω–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ
        all_admins = db.query(User).filter(User.admin_level >= 1).all()
        print(f"\nüëë –í—Å–µ –∞–¥–º–∏–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ ({len(all_admins)}):")
        for admin in all_admins:
            print(f"   - {admin.login} ({admin.nickname}) - Level {admin.admin_level}")
        
        db.close()
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)

if __name__ == "__main__":
    main()